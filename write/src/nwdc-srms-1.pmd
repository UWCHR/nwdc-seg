```python, header, echo=False
# Author: University of Washington Center for Human Rights
# Title: ICE SRMS Data on Use of Solitary Confinement at Northwest ICE Processing Center, 1st Installment Feb. 2019
# Date: 2020-05-13
# License: GPL 3.0 or greater
```

```python, imports, echo=True

import pandas as pd
from pandas.tseries import offsets
import numpy as np
import datetime as dt
import yaml
import matplotlib.pyplot as plt
from matplotlib.pyplot import cm
import matplotlib.ticker as mtick
from matplotlib.ticker import (MultipleLocator, FormatStrFormatter,
                               AutoMinorLocator, NullLocator)
import matplotlib.dates as mdates
import seaborn as sns

```

```python, footnote_functions, echo=False

# Functions for HTML formatted footnotes

fn_count = 1
fn_buffer = []

def fn(ref_text=str):
    global fn_count, fn_buffer
    ftn_sup = f'<a href="#_ftn{fn_count}" name="_ftnref{fn_count}"><sup>[{fn_count}]</sup></a>'
    ftn_ref = f'<a href="#_ftnref{fn_count}" name="_ftn{fn_count}"><sup>[{fn_count}]</sup></a> {ref_text}'
    fn_buffer.append(ftn_ref)
    fn_count = fn_count + 1
    print(ftn_sup)

def print_fn_refs():
    global fn_buffer
    for fn in fn_buffer:
        print(fn)
        print()

# Functions for labeling figures and tables

fig_count = 1
tab_count = 1

def fig_label():
    global fig_count
    print(f'Figure {fig_count}')
    fig_count = fig_count + 1

def tab_label():
    global tab_count
    print(f'Table {tab_count}')
    tab_count = tab_count + 1

```

# ICE SRMS Data on Use of Solitary Confinement at Northwest ICE Processing Center, 1st Installment Feb. 2019
## UW Center for Human Rights

[Back to Data Appendix Index](index.html)

Data analyzed:

1. ICE SRMS dataset of reported solitary confinement placements at NWDC released to UWCHR via FOIA on February 22, 2019 (first installment).
2. ICE SRMS dataset of national solitary confinement placements analyzed by International Consortium of Investigative Journalists (Spencer Woodman, Karrie Kehoe, Maryam Saleh, and Hannah Rappleye, ["Thousands of Immigrants Suffer In US Solitary Confinement"](https://www.icij.org/investigations/solitary-voices/thousands-of-immigrants-suffer-in-us-solitary-confinement/), ICIJ, May 21 2019)
3. ICE SRMS dataset of national solitary confinement placements analyzed by Project on Government Oversight (POGO, ["ISOLATED: ICE Confines Some Detainees with Mental Illness in Solitary for Months"](https://www.pogo.org/investigation/2019/08/isolated-ice-confines-some-detainees-with-mental-illness-in-solitary-for-months/), August 14 2019)
4. Dataset of characteristics of ICE detention facilities obtained via FOIA by National Immigrant Justice Center (NIJC, ["
ICE Detention Facilities As Of November 2017"](https://immigrantjustice.org/ice-detention-facilities-november-2017))

```python, data_import, echo=True

csv_opts = {'sep': '|',
            'quotechar': '"',
            'compression': 'gzip',
            'encoding': 'utf-8'}

# Import and test asserts for UWCHR segregation log dataset
srms1 = pd.read_csv('write/input/srms-1.csv.gz',
                 parse_dates=['placement_date', 'release_date'],
                 **csv_opts)

assert len(srms1[srms1['release_date'] < srms1['placement_date']]) == 0
assert len(srms1) == len(set(srms1['tracking_number']))
assert sum(srms1['placement_date'].isnull()) == 0

# Import ICIJ segregation log dataset
icij = pd.read_csv('write/input/icij.csv.gz',
                   parse_dates=['placement_date', 'release_date'],
                   **csv_opts)
icij['facility'] = icij['facility'].str.strip()
icij_nwdc_str = 'WA - Northwest Detention Center'
icij_nwdc = icij['facility'] == icij_nwdc_str
icij_adelanto = icij['facility'] == 'CA - Adelanto Correctional Facility'

# Import POGO segregation log dataset
pogo = pd.read_csv('write/input/pogo.csv.gz',
                   parse_dates=['placement_date', 'release_date'],
                   **csv_opts)

pogo['record_id'] = range(len(pogo))
pogo = pogo.rename({'length_of_solitary_confinement_(pogo_calculation)': 'days_solitary'}, axis=1)
pogo_nwdc_str = 'TACOMA ICE PROCESSING CENTER (NORTHWEST DET CTR) (WA)'
pogo_nwdc = pogo['facility'] == pogo_nwdc_str
pogo['nwdc'] = pogo['facility'] == pogo_nwdc_str

# Import NIJC facilities dataset
facil = pd.read_csv('write/frozen/facil-list.csv.gz', **csv_opts)

```

## Data Quality

Previous reports by ICIJ and POGO analyzing ICE solitary confinement data have noted that the data likely under-reports true total solitary confinement placements, either due to inaccurate record-keeping or limited criteria for cases which are recorded by ICE. In correspondence related to UWCHR's FOIA litigation against ICE, counsel for DHS has confirmed that the dataset released to UWCHR is drawn from ICE's "Segregation Review Management System" (SRMS), asserting that "Only certain categories of segregation are required to be reported to ICE." A 2017 DHS Office of the Inspector General report explains, "According to SRMS guidance, ERO field office staff, including FODs, must use SRMS to report segregation placement data that falls under the ICE directive’s reporting requirements." These requirements include segregation placements affecting people with "special vulnerabilities" including mental health diagnoses; and placements exceeding 14 days during any 21-day period.<%= fn('OIG-17-119, [ICE Field Offices Need to Improve Compliance with Oversight Requirements for Segregation of Detainees with Mental Health Conditions](https://www.oig.dhs.gov/sites/default/files/assets/2017-11/OIG-17-119-Sep17.pdf), September 29, 2017.') %> However, elsewhere ICE has stated "SRMS provides a centralized historical record of all segregation cases".<%= fn('[ICE 2017 Budget Justification](https://www.thisweekinimmigration.com/uploads/6/9/2/2/69228175/fy17budgetcongressionaljustificationdhs2.pdf), p. 54.') %>

### Comparisons of SRMS data with published government reports

A comparison of SRMS data released via FOIA with other government sources noting total segregation placement counts suggests that under-reporting of segregation placements may be extensive. For example, SRMS data released to UWCHR under FOIA reports <%= len(srms1.set_index('placement_date').loc['2013-06-01':'2014-06-26']) %> total segregation placements from June 2013-June 2014. However, a [June 24-26, 2014 Office of Detention Oversight inspection report for NWDC](https://drive.google.com/file/d/1YDX4fOOJ3DCftWiQv7O_5jwA2eZ0ftWR/view?usp=sharing) cdstates, “Documentation reflects there were 776 assignments to segregation in the past year: 515 to administrative segregation and 261 to disciplinary segregation” (page 27). Similarly, data on administrative and disciplinary segregation placements nationwide released under FOIA and published by the International Consortium of Investigative Journalists reports <%= len(icij[icij_adelanto].set_index('placement_date').loc['2013-07-01':'2014-07-10']) %> total segregation placements at Adelanto Detention Facility in Adelanto, CA from July 2013-July 2014. However, a [July 8-10, 2014 Office of Detention Oversight inspection of Adelanto](https://www.ice.gov/doclib/foia/odo-compliance-inspections/2014AdelantoJuly.pdf) reports 286 administrative segregation and 328 disciplinary segregation placements (a total of <%= int(286 + 328) %>) during the year prior to the inspection. Similar reports do not appear to be available for more recent years.

Another source of government data offering a comparison with SRMS records is a 2017 DHS Office of Inspector General report [ICE Field Offices Need to Improve Compliance with Oversight Requirements for Segregation of Detainees with Mental Health Conditions](https://www.oig.dhs.gov/sites/default/files/assets/2017-11/OIG-17-119-Sep17.pdf), which noted issues with segregation reporting.<%= fn('OIG-17-119 [ICE Field Offices Need to Improve Compliance with Oversight Requirements for Segregation of Detainees with Mental Health Conditions](https://www.oig.dhs.gov/sites/default/files/assets/2017-11/OIG-17-119-Sep17.pdf) (September 29, 2017)') %> The report's methodology is described as follows:

"We [...] analyzed SRMS data from October 1, 2015, to June 30, 2016, which showed 713 segregation placements for detainees with mental health conditions — 272 disciplinary instances and 441 administrative instances. Some detainees were segregated multiple times. From the 713 segregation placements in this time period that were in SRMS, we selected and reviewed a judgmental sample of 189 instances of segregation involving 127 detainees with mental health conditions."

We can use national SRMS logs covering this time period, released by the Project on Government Oversight, to attempt to replicate this methodology:

```python, oig_test, echo=True

oig_frame_start = '2015-10-01'
oig_frame_end = '2016-06-30'

oig_frame = pogo.set_index('placement_date')[oig_frame_start:oig_frame_end]

mental_illness_true = ['Yes', 'Mental Illness', 'Serious Mental Illness']

```

Nationwide, during the period analyzed by the DHS OIG, the POGO dataset includes <%= sum(oig_frame['mental_illness'].isin(mental_illness_true)) %> SRMS records indicating mental illness; fewer than reported by the DHS OIG.

These examples suggest that not only do the SRMS logs significantly under-count total segregation placements, SRMS logs released by ICE may not be complete.

## Dataset Structure and Cleaning Process

In a separate process, the document released by ICE (`2018-ICFO-00515 Highlighted_EDIT.xlsx`) has been edited to remove fields containing unredacted sensitive and personally-identifiable information; converted to CSV format and compressed; and minimally cleaned. The resulting file, `srms-1.csv.gz`, is described and analyzed in the continuing sections. Code for this process is available for review upon request.

## Dataset Description and Analysis

The dataset released to UWCHR includes <%= len(srms1) %> records of solitary confinement placements at the Northwest Detention Center. Each record relates to a specific solitary confinement "placement". Detainee names, A-numbers, are redacted from the dataset, making it impossible to determine whether any records relate to detainees experiencing multiple solitary confinement placements; however, comment fields excluded from the public version of this dataset make clear that some represent repeat placements.

The earliest placement date (start of solitary stay) was <%= print(srms1.placement_date.min().strftime('%B %-d, %Y')) %> and the latest placement date was <%= print(srms1.placement_date.max().strftime('%B %-d, %Y')) %>. The earliest release date (end of solitary stay) was <%= print(srms1.release_date.min().strftime('%B %-d, %Y')) %> and the latest release date was <%= print(srms1.release_date.max().strftime('%B %-d, %Y')) %>.


```python, country_of_citizenship_table, echo=False

citizenship = srms1['country_of_citizenship'].value_counts()
top_5 = pd.DataFrame(citizenship.head(5))
all_others = srms1[~srms1['country_of_citizenship'].isin(list(top_5.index))]
top_5.loc['ALL OTHERS', 'country_of_citizenship'] = len(all_others)
top_5['country_of_citizenship'] = top_5['country_of_citizenship'].astype(int)
top_5 = top_5.rename({'country_of_citizenship': 'NWDC Solitary Placements'}, axis=1)
top_5.index = top_5.index.str.title()
top_5.index.name = 'Country of Citizenship'

#print(srms1['gender'].value_counts(dropna=False).head(10))

```

```python, placement_data, echo=False

g_monthly = srms1.set_index('placement_date').groupby(pd.Grouper(freq='MS'))
g_monthly['tracking_number'].nunique().resample('AS').mean()

data = g_monthly['tracking_number'].nunique()

```

No month during the period included in the dataset had fewer than <%= data.min() %> solitary placements. The maximum number of solitary confinement placements in a single month was <%= print(f'{data.max()} in {data.idxmax().month_name()} {data.idxmax().year}') %>. The overall average number of solitary placements per month was <%= round(data.mean(), 2) %>.

**<%= fig_label() %>: Total monthly solitary confinement placements at NWDC**

```python, placement_chart, echo=False, fig=True, width="1200px"

years_loc = mdates.YearLocator()
months_loc = mdates.MonthLocator()
years_fmt = mdates.DateFormatter('%Y')

fig, ax = plt.subplots(figsize=(10,6))
ax.set_facecolor('#DDDDDD')
ax.set_axisbelow(True)
ax.yaxis.grid(color='#FFFFFF')
ax.bar(data.index, data, width=20)
ax.xaxis.set_minor_locator(months_loc)
ax.xaxis.set_major_locator(years_loc)
ax.xaxis.set_major_formatter(years_fmt)
ax.axhline(data.mean(), color='r')
ax.yaxis.set_minor_locator(MultipleLocator(1))
ax.yaxis.set_major_locator(MultipleLocator(2))
plt.title('NWDC Solitary Confinement Placements per month', fontsize=16)
plt.ylabel('Placements', fontsize=12)
plt.xlabel('Calendar year', fontsize=12)
plt.legend(('Average monthly placements', 'Monthly solitary placements'), loc='upper right')

txt='Data Source: ICE SRMS log released via FOIA\nFigure: UW Center for Human Rights'
plt.figtext(.9, -.03, txt, wrap=True, horizontalalignment='right', fontsize=10);

plt.show();

```

<%= sum(srms1['gender'] == 'Male') %> people placed in solitary were male, <%= sum(srms1['gender'] == 'Female') %> were female. People placed in solitary confinement at NWDC were from <%= len(set(srms1['country_of_citizenship'])) %> countries. The top 5 countries of citizenship are listed in Table 1 below.

**<%= tab_label() %>: Top five countries of citizenship of detainees placed in solitary confinement at NWDC**

<% print(top_5.reset_index().to_html(border=0, index=False)) %>

<br>

### Length of Segregation Placements

```python, solitary_length_setup, echo=False

null_release = srms1['release_date'].isnull()

srms1['solitary_length'] = srms1['release_date'] - srms1['placement_date']
srms1['days_solitary'] = srms1['solitary_length'] / np.timedelta64(1, 'D')
srms1.loc[:, 'log_days_solitary'] = np.log(srms1['days_solitary'])
assert sum(srms1['days_solitary'] < 0) == 0


```

<%= null_release.sum() %> records do not have a "Release Date" specified. All of these records are segregation placements beginning during the latter portion of the dataset, which suggests that these refer to individuals who remained in segregation at the time of production of this dataset.<%= fn('No records are missing "Placement Date" values, and no record has a "Release Date" preceding its "Placement Date".') %> For purposes of analysis of placement length, we exclude these records, leaving <%= len(srms1[~null_release]) %> completed solitary placements.

The maximum completed segregation placement length was <%= int(srms1.loc[~null_release, 'days_solitary'].max()) %> days. The average segregation placement length was <%= round(srms1.loc[~null_release, 'days_solitary'].mean(),2) %> days and the median Segregation placement length was <%= int(srms1.loc[~null_release, 'days_solitary'].median()) %> days. The most common placement length was <%= int(srms1.loc[~null_release, 'days_solitary'].mode()) %> days.

The median and mode values are close to ICE's maximum length of 30 days for most disciplinary segregation placements.<%= fn('See Section 2.12 "Special Management Units" in ICE&rsquo;s detention standards manual: <https://www.ice.gov/doclib/detention-standards/2011/2-12.pdf>') %> <%= round(sum(srms1['days_solitary'] <= 30) / len(srms1[~null_release]) * 100, 2) %>% of placements were for 30 days or less, and <%= round(sum(srms1['days_solitary'] > 30) / len(srms1[~null_release]) * 100, 2) %>% of placements were for more than 30 days.

<%= sum(srms1['days_solitary'] <= 15) %>, or <%= round(sum(srms1['days_solitary'] <= 15) / len(srms1[~null_release]) * 100, 2) %>% of placements were for 15 days or less, and <%= sum(srms1['days_solitary'] > 15) %>, or <%= round(sum(srms1['days_solitary'] > 15) / len(srms1[~null_release]) * 100, 2) %>% of placements were for more than 15 days. Under the United Nations Standard Minimum Rules for the Treatment of Prisoners, segregation for more than 15 consecutive days is prohibited. Note that ICE regulations do not require reporting of all segregation placements, as described above.

The following histogram chart displays the distribution of length of stay for completed segregation placements (excluding outliers).

**<%= fig_label() %>: Distribution of length of completed segregation placements (`days_solitary`) at NWDC**

```python, solitary_length_hist, echo=False
max = 780
step = 30
num_bins = np.arange(0,max,step)
data = srms1.loc[~null_release, 'days_solitary']
# the histogram of the data
n, bins, patches = plt.hist(data, num_bins, facecolor='blue', alpha=0.5)
 
plt.plot()
plt.xlabel('Days')
plt.xticks(np.arange(0, max, step=step*2), rotation=45)
plt.ylabel('Placement count')
plt.yticks(np.arange(0, 200, step=20))
plt.ylim(-5, 200)
#plt.title('Segregation placement length (NWDC)')

# Tweak spacing to prevent clipping of ylabel
plt.subplots_adjust(left=0.15) 

txt='Data Source: ICE SRMS log released via FOIA\nFigure: UW Center for Human Rights'
plt.figtext(1.1, -.03, txt, wrap=True, horizontalalignment='right', fontsize=12)

plt.show();

```

```python, nwdc_placement_reason_table, echo=False

placements = srms1.groupby(by=["placement_reason"])["days_solitary"].describe().sort_values(by='count', ascending=False)
placements['count'] = placements['count'].astype(int)
placements['min'] = placements['min'].astype(int)
placements['max'] = placements['max'].astype(int)
placements['mean'] = round(placements['mean'], 2)
placements['std'] = round(placements['std'], 2)
placements = placements.fillna('')

```

<br>

### Placement Reason

Each solitary placement is categorized with one of <%= len(set(srms1['placement_reason'])) %> placement reasons (including "Other"). As mentioned above, the maximum solitary length for most "Disciplinary" placements is 30 days.

We can also aggregate these placement reasons into broader categories for comparison, as in the following figure:

**<%= fig_label() %>: Distribution of variable** `days_solitary` **by** `placement_reason_type`

```python, placement_reason_chart, echo=False, fig=True, width='800px'

order = srms1.groupby(by=["placement_reason_type"])["days_solitary"].median().sort_values(ascending=False).index;

fig, ax = plt.subplots(figsize=(7, 6));
ax.set_xscale("log");
ax.xaxis.set_major_formatter(mtick.ScalarFormatter());

fig = sns.boxplot(data=srms1, x="days_solitary", y="placement_reason_type", order=order, palette="vlag");

fig = sns.swarmplot(data=srms1, x="days_solitary", y="placement_reason_type", order=order,
              size=2, color=".3", linewidth=0);

ax.xaxis.grid(True)
ax.set(ylabel="")
sns.despine(trim=True, left=True)

txt = 'Data Source: ICE SRMS log released via FOIA\nFigure: UW Center for Human Rights';
plt.figtext(1.1, -.03, txt, wrap=True, horizontalalignment='right', fontsize=12);
plt.show();
```

As seen in the following table describing the lenth of solitary placement for each detailed placement type, the most frequently used reasons include broad categories such as "Disciplinary", "Protective Custody: Other Detainee Safety" and "Facility Security Threat: Other".

**<%= tab_label() %>: Description of variable** `days_solitary` **grouped by** `placement_reason`

<% print(placements.to_html(border=0, index=True)) %>

Application of different placement reason categories varies over time, as seen in the following figure, which shows trends in the proportion of placement reasons per fiscal year period:

**<%= fig_label() %>: NWDC segregation placement reason categories as proportion of total placements**

```python, placement_reason_proportion, echo=False, fig=True, width='800px'

data = srms1.set_index('placement_date').groupby([pd.Grouper(freq='AS-OCT')])['placement_reason_type'].value_counts().unstack()
data.index = [f'FY{x.year+1}' for x in data.index]

totals = data.sum(axis=1).to_list()
for col in data.columns:
    data[col] = [i / j * 100 for i,j in zip(data[col], totals)]

data = data[['Disciplinary',
            'Pending Disciplinary',
            'Protective Custody',
            'Facility Security Threat',
            'Hunger Strike',
            'Medical',
            'Mental Illness',
            'Other'
            ]]

data = data.fillna(0)

fig, ax = plt.subplots(figsize=(10,6))
# fig = data.plot(ax=ax, kind='bar', alpha=.3)
fig = data.plot(ax=ax)
plt.legend(bbox_to_anchor=(1.04,1), loc='upper left', title='placement_reason_type')

ax.yaxis.set_major_formatter(mtick.PercentFormatter())
ax.set_ylim(-5,75)
plt.ylabel('% of Placements', fontsize=12)

plt.xlabel('Fiscal Year', fontsize=12)

# plt.title('Placement reason as proportion of total placements', fontsize=18, pad=10)

txt='Data Source: ICE SRMS log released via FOIA\nFigure: UW Center for Human Rights'
plt.figtext(1.1, -.03, txt, wrap=True, horizontalalignment='right', fontsize=12)

plt.show();

```

We can also illustrate placement reason and stay lengths over time. Note the frequent disciplinary placements during late FY2012 and FY2013 with stay lengths around 15-40 days, and the cluster of long "Facility Security Threat" placements during FY2016:

**<%= fig_label() %>: NWDC segregation placements by reason and stay length over time**

```python, placement_reason_timeline, echo=False, fig=True, width='1200px'

fig = plt.figure(figsize=(10,6))
ax = fig.add_subplot(111)
ax.set_facecolor('#DDDDDD')
ax.set_axisbelow(True)
ax.yaxis.grid(color='#FFFFFF', which='both')
ax.xaxis.grid(color='#FFFFFF')

to_plot = 'placement_reason_type'

values = ['Disciplinary',
        'Pending Disciplinary',
        'Protective Custody',
        'Facility Security Threat',
        'Hunger Strike',
        'Medical',
        'Mental Illness',
        'Other']

for v in values:
    data = srms1[srms1[to_plot] == v]
    x=data.loc[:, 'placement_date'].astype(int)
    y=data.loc[:,'days_solitary']
    plt.scatter(x, y, s=20, alpha=.8)

plt.xticks(pd.date_range(start='2013-01-01', end='2018-01-01', freq='AS-OCT').astype(int))
xticks = ax.get_xticks()
xticks_dates = [str(f'FY{pd.to_datetime(x).year}') for x in xticks]
ax.set_xticklabels(xticks_dates)
plt.xlabel('Placement date', fontsize=12)

plt.yscale('log')
plt.ylabel('Stay length (days, log scale)', fontsize=12)
ax.yaxis.set_major_formatter(mtick.ScalarFormatter())

plt.legend(values, title=to_plot, loc='upper left', bbox_to_anchor=(1, 1))

plt.title('Stay length of reported NWDC segregation placements', fontsize=16)
plt.show()
plt.close(fig=fig)
del fig, ax

```

<br>

### Mental illness

```python, nwdc_mental_illness_table, echo=False

mental_illness = srms1.groupby(by=["mental_illness"])["days_solitary"].describe().sort_values(by='count', ascending=False)
mental_illness['count'] = mental_illness['count'].astype(int)
mental_illness['min'] = mental_illness['min'].astype(int)
mental_illness['max'] = mental_illness['max'].astype(int)
mental_illness['mean'] = round(mental_illness['mean'], 2)
mental_illness['std'] = round(mental_illness['std'], 2)
mental_illness = mental_illness.fillna('')

```

While "Mental Illness" is occasionally employed as a `placement_reason` value, all records also include a `mental_illness` field indicating whether the detained person has been diagnosed with a mental illness or serious mental illness. <%= sum(srms1['mental_illness'] == 'Mental Illness') %>, or <%= round(sum(srms1['mental_illness'] == 'Mental Illness') / len(srms1) * 100, 2) %>% of records indicate a "Mental Illness" diagnosis; <%= sum(srms1['mental_illness'] == 'Serious Mental Illness') %>, or <%= round(sum(srms1['mental_illness'] == 'Serious Mental Illness') / len(srms1) * 100, 2) %>% of records indicate a diagnosis of "Serious Mental Illness". Remaining records indicate no mental illness diagnosis.

As shown in the preceding section, <%= sum(srms1['placement_reason'] == "Mental Illness") %> records indicate a `placement_reason` of "Mental Illness". Of these records, <%= sum(srms1[srms1['placement_reason'] == 'Mental Illness']['mental_illness'] == 'None') %> indicate a `mental_illness` value of "None".

As illustrated in the following table and chart, stay lengths for individuals with a "Mental Illness" diagnosis tended to be shorter than those without. However, stay lengths for individuals with a "Serious Mental Illness" diagnosis tended to be longer:

**<%= tab_label() %>: Description of variable** `mental_illness` **grouped by** `placement_reason`

<% print(mental_illness.to_html(border=0, index=True)) %>


**<%= fig_label() %>: Distribution of variable** `days_solitary` **by** `mental_illness`

```python, mental_illness_chart, echo=False, fig=True, width='800px'

order = ['None', 'Mental Illness', 'Serious Mental Illness']

fig, ax = plt.subplots(figsize=(7, 6));
ax.set_xscale("log");
ax.xaxis.set_major_formatter(mtick.ScalarFormatter());

fig = sns.boxplot(data=srms1, x="days_solitary", y="mental_illness", order=order, palette="vlag");

fig = sns.swarmplot(data=srms1, x="days_solitary", y="mental_illness", order=order,
              size=2, color=".3", linewidth=0);

ax.xaxis.grid(True)
ax.set(ylabel="")
sns.despine(trim=True, left=True)

```



<br>

### "Facility-Initiated" versus "Detainee Request" placements at NWDC

```python, nwdc_detainee_request_tables, echo=False

request_reason = srms1.groupby(['detainee_request', 'placement_reason_type'])["days_solitary"].describe()
request_reason['count'] = request_reason['count'].astype(int)
request_reason['min'] = request_reason['min'].astype(int)
request_reason['max'] = request_reason['max'].astype(int)
request_reason['mean'] = round(request_reason['mean'], 2)
request_reason['std'] = round(request_reason['std'], 2)
request_reason = request_reason.fillna('')

detainee_requested = srms1['detainee_request'] == 'Detainee Request'

```

Each placement is coded as either "Facility-Initiated" (<%= len(srms1[~detainee_requested]) %> placements) or "Detainee Request" (<%= len(srms1[detainee_requested]) %> placements). As seen in the below table, the majority of reported detainee requested placements were for "Protective Custody", with a small minority classified as "Other."

Average stay lengths for "Detainee Request" placements were considerably longer than for "Facility-Initiated" placements (<%= round(srms1.loc[detainee_requested, 'days_solitary'].mean(), 2) %> versus <%= round(srms1.loc[~detainee_requested, 'days_solitary'].mean(), 2) %>) days; however, we note that stay lengths vary greatly and fluctuate over time, as seen in the following figure.

**<%= fig_label() %>: Distribution of variable** `days_solitary` **grouped by**  `detainee_request`

```python, nwdc_detainee_request_chart, echo=False, fig=True, width='800px'

fig, ax = plt.subplots(figsize=(7, 6));
ax.set_xscale("log");
ax.xaxis.set_major_formatter(mtick.ScalarFormatter());

fig = sns.boxplot(data=srms1, x="days_solitary", y="detainee_request", palette="vlag");

fig = sns.swarmplot(data=srms1, x="days_solitary", y="detainee_request",
              size=2, color=".3", linewidth=0);

ax.xaxis.grid(True)
ax.set(ylabel="")
sns.despine(trim=True, left=True)

```

```

**<%= tab_label() %>: Description of variable** `days_solitary` **grouped by** `detainee_request` **and** `placement_reason_type`

<% print(request_reason.to_html(border=0, index=True)) %>

<br>

## National solitary confinement data

At least two reports based on national data regarding the use of solitary confinement in immigration detention have been published, by the Internaional Consortium of Investigative Journalists (ICIJ) and the Project on Government Oversight (POGO). The data underlying these reports cover an overlapping time period also covered by the data released to UWCHR by ICE. However, due to the lack of unique identifiers for each solitary confinemnet placement, it is not possible to merge these datasets into a single national timeline.

### ICIJ

See: ["Solitary Voices: Thousands of Immigrants Suffer In US Solitary Confinement"](https://www.icij.org/investigations/solitary-voices/thousands-of-immigrants-suffer-in-us-solitary-confinement/) by Spencer Woodman, Karrie Kehoe, Maryam Saleh, and Hannah Rappleye, International Consortium of Investigative Journalists, May 21, 2019.

The dataset published by ICIJ includes <%= len(icij[icij_nwdc]) %> solitary confinement placements at NWDC from <%= print(icij.placement_date.min().strftime('%B %-d, %Y')) %> to <%= print(icij.placement_date.max().strftime('%B %-d, %Y')) %>, out of a total of <%= len(icij) %> placements nationwide.

NWDC is ranked #<%= int(icij.groupby('facility')['record_id'].count().rank(ascending=False)[icij_nwdc_str]) %> among <%= len(set(icij['facility'])) %> ICE facilities ranked by number of solitary placements. The average length of solitary stay is almost <%= round(icij[icij_nwdc]['days_solitary'].mean(), 2) %> days (rank #2), compared to a national average of <%= round(icij['days_solitary'].mean(), 2) %>; median solitary stay is <%= round(icij[icij_nwdc]['days_solitary'].median(), 2) %> days at NWDC (rank #<%= icij.groupby('facility')['days_solitary'].median().rank(ascending=False, method='min')[icij_nwdc_str] %>), compared to a national median of <%= round(icij['days_solitary'].median(), 2) %>.

### POGO

See: POGO, ["ISOLATED: ICE Confines Some Detainees with Mental Illness in Solitary for Months"](https://www.pogo.org/investigation/2019/08/isolated-ice-confines-some-detainees-with-mental-illness-in-solitary-for-months/), August 14, 2019.

The dataset published by POGO includes <%= len(pogo[pogo_nwdc]) %> solitary confinement placements at NWDC from <%= print(pogo.placement_date.min().strftime('%B %-d, %Y')) %> to <%= print(pogo.placement_date.max().strftime('%B %-d, %Y')) %>, out of a total of <%= len(pogo) %> placements nationwide.

NWDC is ranked #<%= int(pogo.groupby('facility')['record_id'].count().rank(ascending=False)[pogo_nwdc_str]) %> among <%= len(set(pogo['facility'])) %> ICE facilities ranked by number of solitary placements. The average length of solitary stay is almost <%= round(pogo[pogo_nwdc]['days_solitary'].mean(), 2) %> days (rank #2), compared to a national average of <%= round(pogo['days_solitary'].mean(), 2) %>; median solitary stay is <%= round(pogo[pogo_nwdc]['days_solitary'].median(), 2) %> days at NWDC (rank #<%= int(pogo.groupby('facility')['days_solitary'].median().rank(ascending=False, method='min')[pogo_nwdc_str]) %>), compared to a national median of <%= round(pogo['days_solitary'].median(), 2) %>.

The following table describes the distribution of solitary placement lengths (`solitary_days`) for the top 10 facilities with the longest average solitary placements. Note that some of the top facilities only have very few total placements during the period described by the POGO data.

```python, facility_solitary_days_table, echo=False

g1 = pogo.groupby('facility')
pogo_facil_desc = g1['days_solitary'].describe()
pogo_facil_table = pogo_facil_desc.sort_values(by='mean', ascending=False)
pogo_facil_table['count'] = pogo_facil_table['count'].astype(int)
pogo_facil_table['min'] = round(pogo_facil_table['min'], 0)
pogo_facil_table['max'] = round(pogo_facil_table['max'], 0)
pogo_facil_table['mean'] = round(pogo_facil_table['mean'], 2)
pogo_facil_table['std'] = round(pogo_facil_table['std'], 2)
pogo_facil_table = pogo_facil_table.fillna('')
pogo_facil_table = pogo_facil_table.head(10)

```

**<%= tab_label() %>: Top 10 immigration detention facilities by average solitary placement length, description of variable `days_solitary`**

<% print(pogo_facil_table.to_html(border=0, index=True)) %>

<br>

The following figure shows that among the 15 immigration detention facilties with the most total solitary placements from January 2016 to May 2018, Northwest Detention Center consistently had significantly longer average solitary placement lengths than other facilities.

**<%= fig_label() %>: Top 15 immigration detention facilities by total number of solitary placements, average solitary placement length per quarter**


```python, solitary_length_timeline, echo=False, fig=True, width="800px"

facil_count = pogo.groupby('facility')['record_id'].count()
facil_count = facil_count.sort_values(ascending=False)
top_15_facil = facil_count.sort_values(ascending=False).head(15).index
edit_labels = pd.Series(facil_count.index + ' - ' + facil_count.values.astype(str)).head(15)
avg_days = pogo.set_index('placement_date').groupby([pd.Grouper(freq='Q'),'facility'])['days_solitary'].mean()
avg_days = pogo.set_index('placement_date').groupby([pd.Grouper(freq='Q'),'facility'])['days_solitary'].mean()
avg_days.name = 'mean_days_solitary'
avg_days = avg_days.reset_index().set_index('facility')
avg_days = avg_days.sort_values(by=['placement_date', 'mean_days_solitary'],ascending=[True, False])
avg_days = avg_days.reset_index().set_index('placement_date')
data = avg_days.reset_index().set_index('facility')
data = data.reset_index().set_index('placement_date').dropna()

fig, ax = plt.subplots(figsize=(10,6))

color=iter(cm.viridis_r(np.linspace(0,1,15)))
grey=iter(cm.Greys(np.linspace(0,1,100)))

for f in top_15_facil:
# for f in data['facility'].unique():
    if f == pogo_nwdc_str:
        data_sub = data[data['facility'] == f]
        data_sub['mean_days_solitary'].name = f
        c=next(color)
        ax.plot(data_sub['mean_days_solitary'], color=c, alpha=1, linewidth=3)
    else:
        data_sub = data[data['facility'] == f]
        data_sub['mean_days_solitary'].name = f
        c=next(color)
        ax.plot(data_sub['mean_days_solitary'], color=c, alpha=.9)

ax.yaxis.grid(color='#DDDDDD')
plt.ylabel('Solitary days', fontsize=14)
plt.suptitle('Average solitary placement length (quarterly)', fontsize=16)
plt.title('Top 15 ICE facilities by total solitary placements, Jan. 2016 - May 2018')
handles, labels = ax.get_legend_handles_labels()
leg = ax.legend(loc='lower center', bbox_to_anchor=(.5, -1), fontsize=12, title='Detention Facility - Solitary Placements', title_fontsize=14, labels=edit_labels.values)
#fig.savefig('../output/avg_solitary_length.png', dpi=300, bbox_inches='tight')
plt.show()

```

```python, pogo_comparative_tables, echo=False

g2 = pogo.groupby(by=["nwdc","detainee_request"])
pogo_det_req = g2["days_solitary"].describe()
pogo_det_req['count'] = pogo_det_req['count'].astype(int)
pogo_det_req['min'] = round(pogo_det_req['min'], 0)
pogo_det_req['max'] = round(pogo_det_req['max'], 0)
pogo_det_req['mean'] = round(pogo_det_req['mean'], 2)
pogo_det_req['std'] = round(pogo_det_req['std'], 2)

g3 = pogo.groupby(by=['nwdc', 'placement_reason_type'])
pogo_reason = g3["days_solitary"].describe()
pogo_reason['count'] = pogo_reason['count'].astype(int)
pogo_reason['min'] = round(pogo_reason['min'], 0)
pogo_reason['max'] = round(pogo_reason['max'], 0)
pogo_reason['mean'] = round(pogo_reason['mean'], 2)
pogo_reason['std'] = round(pogo_reason['std'], 2)

```

<br>

#### National comparison of solitary stay length by placement categories

Average solitary stays at NWDC are longer than other facilities for both "detainee request" and "facility-initiated" placements:

**<%= tab_label() %>: Solitary placements groupbed by `detainee_request`, NWDC ('True') versus all other facilities, description of variable `days_solitary`**

<% print(pogo_det_req.to_html(border=0, index=True)) %>

Placement reason categories longer on average at NWDC than at other detention facilities nationwide include "Facility Security Threat", "Medical", and "Protective Custody". We note that no solitary placements at NWDC are classified as "Suicide Risk Placement".

**<%= tab_label() %>: Solitary placements grouped by `placement_reason_type`, NWDC ('True') versus all other facilities, description of variable `days_solitary`**

<% print(pogo_reason.to_html(border=0, index=True)) %>

<br>

### Facility average length of stay

```python, alos_setup, echo=False

adp_cols = ['fy15_adp', 'fy16_adp', 'fy17_adp', 'fy18_adp']

alos_cols = ['fy15_alos', 'fy16_alos', 'fy17_alos', 'fy18_alos']

alos = facil.set_index('detloc')[alos_cols]

nwdc_alos_percent = alos.rank(pct=True, ascending=True).loc['CSCNWWA']

nwdc_alos_percent_mean = nwdc_alos_percent.mean()

```

Long solitary stays at NWDC cannot be separated from the broader issue of prolonged, and lengthening, stays in civil immigration detention. According to data released by ICE, the average length of stay at NWDC increased from <%= int(facil.set_index('detloc').loc['CSCNWWA', 'fy15_alos']) %> days in FY2015 to <%= int(facil.set_index('detloc').loc['CSCNWWA', 'fy18_alos']) %> days in FY2018. During the period from FY2015-2018 average stay lengths at NWDC were longer than at <%= print(f'{round((nwdc_alos_percent_mean * 100), 0)}') %>% of other immigration detention centers nationwide.

```python, alos_hist, echo=False

fys = ['fy15', 'fy16', 'fy17', 'fy18']

bin_min = 0
bin_max = 400
step = 30

num_bins = np.arange(bin_min, bin_max, step)

target_facil = 'CSCNWWA'
target_alos = alos.loc[target_facil, alos_cols]

fig = plt.figure(figsize=(10,8))
i = 0
for fy in fys:
    ax=plt.subplot(2,2,i+1)
    
    data = alos[f'{fy}_alos']
    
    n, bins, patches = plt.hist(data, num_bins, facecolor='blue', alpha=0.5)
    
    target_bins = np.digitize(list(target_alos.values), list(bins))
    target_bins = target_bins - 1 # patches below needs 0-indexed input
    
    patches[target_bins[i]].set_fc('r')
 
    plt.xlabel('ALOS')
    plt.xticks(np.arange(bin_min, bin_max, step=step), rotation=45)
    plt.ylabel('Facil Count')
    plt.yticks(np.arange(0, 400, step=50))
    plt.ylim(-5, 375)
    plt.title(f'{fy}')

    # Tweak spacing to prevent clipping of ylabel
    plt.subplots_adjust(left=0.15) 
    i = i + 1
plt.suptitle(f'Distribution of ALOS at ICE detention facilities, NWDC highlighted', fontsize=14)
plt.subplots_adjust(wspace=.2, hspace=.4)
plt.show()

```

According to ICE's FY2020 Budget Congressional Justification, the national average length of stay (ALOS) in immigration detention was 47.4 days in FY2018.<%= fn('See: <https://www.dhs.gov/sites/default/files/publications/19_0318_MGMT_CBJ-Immigration-Customs-Enforcement_0.pdf>, page 4.') %> The same source also notes, "For those arrested during ICE interior enforcement operations, ALOS was 53.9 days."<%= fn('Ibid. p. 148.') %>

```python, adp_alos_scatter, echo=False

data = facil.set_index('detloc')[alos_cols + adp_cols]

data = data[data.index.isin(set(pogo['detloc']))]

fys = ['fy15', 'fy16', 'fy17', 'fy18']

fig = plt.figure(figsize=(10,8))
i = 0
for fy in fys:
    adp_col = f'{fy}_adp'
    alos_col = f'{fy}_alos'
    ax=plt.subplot(2,2,i+1)
    i = i+1
    
    plt.scatter(x=alos_col, y=adp_col, data=data)
    plt.scatter(x=alos_col, y=adp_col, c='r', data=data.loc['CSCNWWA'])
    
    plt.xlabel('ALOS')
    plt.xticks(np.arange(0, 151, step=25), rotation=45)
    plt.xlim(-10, 151)
    plt.ylabel('ADP')
    plt.yticks(np.arange(0, 2001, step=200))
    plt.ylim(-100, 2000)
    plt.title(f'{fy.upper()}')

plt.suptitle(f'ICE facilities with solitary placements\nby ALOS, ADP; NWDC highlighted', fontsize=14)
plt.subplots_adjust(wspace=.4, hspace=.4)
plt.show();


```

```python, alos_solitary_scatter, echo=False

g = pogo.set_index('placement_date').groupby([pd.Grouper(freq='AS-OCT'),'detloc'])

sol_alos = g['days_solitary'].mean().unstack().T
sol_alos.columns = ['fy16_solitary_alos', 'fy17_solitary_alos', 'fy18_solitary_alos']

data = sol_alos.join(facil.set_index('detloc')[alos_cols])
data = data.drop('fy15_alos', axis=1)

fys = ['fy16', 'fy17', 'fy18']

fig = plt.figure(figsize=(10,8))
i = 0
for fy in fys:
    x = f'{fy}_alos'
    y = f'{fy}_solitary_alos'
    ax=plt.subplot(2,2,i+1)
    i = i+1
    
    plt.scatter(x=x, y=y, data=data)
    plt.scatter(x=x, y=y, c='r', data=data.loc['CSCNWWA'])
    
    plt.xlabel('Total ALOS')
    plt.xlim(-5, 130)
    plt.xticks(np.arange(0, 126, step=25), rotation=45)
    plt.ylabel('Solitary ALOS')
    plt.yticks(np.arange(0, 151, step=25))
    plt.ylim(-5, 150)
    plt.title(f'{fy.upper()}')

plt.suptitle(f'ICE facilities with solitary placements\nby total ALOS, avg. solitary placement length; NWDC highlighted', fontsize=14)
plt.subplots_adjust(wspace=.4, hspace=.4)
plt.show();


```

---

## Notes

<%= print_fn_refs() %>