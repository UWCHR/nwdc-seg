```python, header, echo=False
# Author: University of Washington Center for Human Rights
# Title: ICE SRMS Data on Use of Solitary Confinement at Northwest Detention Center, 2nd Installment Aug. 2020
# Date: 2020-11-30
# License: GPL 3.0 or greater
```

```python, imports, echo=True

import pandas as pd
from pandas.tseries import offsets
import numpy as np
import datetime as dt
import yaml
import matplotlib.pyplot as plt
from matplotlib.pyplot import cm
import matplotlib.ticker as mtick
from matplotlib.ticker import (MultipleLocator, FormatStrFormatter,
                               AutoMinorLocator, NullLocator)
import matplotlib.dates as mdates
import seaborn as sns

```

```python, footnote_functions, echo=False

# Functions for HTML formatted footnotes

fn_count = 1
fn_buffer = []

def fn(ref_text=str):
    global fn_count, fn_buffer
    ftn_sup = f'<a href="#_ftn{fn_count}" name="_ftnref{fn_count}"><sup>[{fn_count}]</sup></a>'
    ftn_ref = f'<a href="#_ftnref{fn_count}" name="_ftn{fn_count}"><sup>[{fn_count}]</sup></a> {ref_text}'
    fn_buffer.append(ftn_ref)
    fn_count = fn_count + 1
    print(ftn_sup)

def print_fn_refs():
    global fn_buffer
    for fn in fn_buffer:
        print(fn)
        print()

# Functions for labeling figures and tables

fig_count = 1
tab_count = 1

def fig_label():
    global fig_count
    print(f'Figure {fig_count}')
    fig_count = fig_count + 1

def tab_label():
    global tab_count
    print(f'Table {tab_count}')
    tab_count = tab_count + 1

```

# ICE SRMS Data on Use of Solitary Confinement at Northwest Detention Center, 2nd Installment Aug. 2020
## UW Center for Human Rights, 30 November, 2020

[Back to Data Appendix Index](index.html)

**Data analyzed:**

1. ICE Segregation Review Management System dataset of reported solitary confinement placements at NWDC released to UWCHR via FOIA on August 12, 2020 (second installment, **"SRMS 2"**).

```python, data_import, echo=True

csv_opts = {'sep': '|',
            'quotechar': '"',
            'compression': 'gzip',
            'encoding': 'utf-8'}

# Import and test asserts for UWCHR segregation log dataset
srms2 = pd.read_csv('input/srms-2.csv.gz',
                 parse_dates=['placement_date', 'release_date'],
                 **csv_opts)

assert len(srms2[srms2['release_date'] < srms2['placement_date']]) == 0
assert len(srms2) != len(set(srms2['tracking_number'])) # Tracking number redacted
assert sum(srms2['placement_date'].isnull()) == 0

```

## Dataset Structure and Cleaning Process

In a private repository, the document released by ICE (`2019-ICLI-00003_-_SRMS_Report_from_CM_-_NWDC_Redacted.xlsx`) has been edited to remove fields containing unredacted sensitive and personally-identifiable information; converted to CSV format and compressed. The resulting CSV has been minimally cleaned in a private repository, dropping 6 duplicated records and generating unique identifier field `hashid`; cleaning code availabe upon request. The resulting file, `srms-2.csv.gz`, is described and analyzed in the continuing sections. Code for this process is available for review upon request.

## Dataset Description and Analysis

The dataset released to UWCHR includes <%= len(srms2) %> records of solitary confinement placements at the Northwest Detention Center. Each record relates to a specific solitary confinement "placement". Detainee names, A-numbers, are redacted from the dataset, making it impossible to determine whether any records relate to detainees experiencing multiple solitary confinement placements; however, comment fields excluded from the public version of this dataset make clear that some represent repeat placements.

The earliest placement date (start of solitary stay) was <%= print(srms2.placement_date.min().strftime('%B %-d, %Y')) %> and the latest placement date was <%= print(srms2.placement_date.max().strftime('%B %-d, %Y')) %>. The earliest release date (end of solitary stay) was <%= print(srms2.release_date.min().strftime('%B %-d, %Y')) %> and the latest release date was <%= print(srms2.release_date.max().strftime('%B %-d, %Y')) %>.


```python, country_of_citizenship_table, echo=False

citizenship = srms2['country_of_citizenship'].value_counts()
top_5 = pd.DataFrame(citizenship.head(5))
all_others = srms2[~srms2['country_of_citizenship'].isin(list(top_5.index))]
top_5.loc['ALL OTHERS', 'country_of_citizenship'] = len(all_others)
top_5['country_of_citizenship'] = top_5['country_of_citizenship'].astype(int)
top_5 = top_5.rename({'country_of_citizenship': 'NWDC Solitary Placements'}, axis=1)
top_5.index = top_5.index.str.title()
top_5.index.name = 'Country of Citizenship'

#print(srms2['gender'].value_counts(dropna=False).head(10))

```

```python, placement_data, echo=False

g_monthly = srms2.set_index('placement_date').groupby(pd.Grouper(freq='MS'))
g_monthly['tracking_number'].count().resample('AS').mean()

data = g_monthly['tracking_number'].count()

```

The maximum number of solitary confinement placements in a single month was <%= print(f'{data.max()} in {data.idxmax().month_name()} {data.idxmax().year}') %>. The overall average number of solitary placements per month was <%= round(data.mean(), 2) %>.

**<%= fig_label() %>: Total monthly solitary confinement placements at NWDC**

```python, placement_chart, echo=False, fig=True, width="1200px"

years_loc = mdates.YearLocator()
months_loc = mdates.MonthLocator()
years_fmt = mdates.DateFormatter('%Y')

fig, ax = plt.subplots(figsize=(10,6))
ax.set_facecolor('#DDDDDD')
ax.set_axisbelow(True)
ax.yaxis.grid(color='#FFFFFF')
ax.bar(data.index, data, width=20)
ax.xaxis.set_minor_locator(months_loc)
ax.xaxis.set_major_locator(years_loc)
ax.xaxis.set_major_formatter(years_fmt)
ax.axhline(data.mean(), color='r')
ax.yaxis.set_minor_locator(MultipleLocator(1))
ax.yaxis.set_major_locator(MultipleLocator(2))
plt.title('NWDC Solitary Confinement Placements per month', fontsize=16)
plt.ylabel('Placements', fontsize=12)
plt.xlabel('Calendar year', fontsize=12)
plt.legend(('Average monthly placements', 'Monthly solitary placements'), loc='upper right')

txt='Data Source: ICE SRMS log released via FOIA\nFigure: UW Center for Human Rights'
plt.figtext(.9, -.03, txt, wrap=True, horizontalalignment='right', fontsize=10);

plt.show();

```

<%= sum(srms2['gender'] == 'Male') %> people placed in solitary were male, <%= sum(srms2['gender'] == 'Female') %> were female. People placed in solitary confinement at NWDC were from <%= len(set(srms2['country_of_citizenship'])) %> countries. The top 5 countries of citizenship are listed in Table 1 below.

**<%= tab_label() %>: Top five countries of citizenship of detainees placed in solitary confinement at NWDC**

<% print(top_5.reset_index().to_html(border=0, index=False)) %>

<br>

### Length of Segregation Placements

```python, solitary_length_setup, echo=False

null_release = srms2['release_date'].isnull()

srms2['solitary_length'] = srms2['release_date'] - srms2['placement_date']
srms2['days_solitary'] = srms2['solitary_length'] / np.timedelta64(1, 'D')
srms2.loc[:, 'log_days_solitary'] = np.log(srms2['days_solitary'])
assert sum(srms2['days_solitary'] < 0) == 0


```

<%= null_release.sum() %> records do not have a "Release Date" specified. All of these records are segregation placements beginning during the latter portion of the dataset, which suggests that these refer to individuals who remained in segregation at the time of production of this dataset.<%= fn('No records are missing "Placement Date" values, and no record has a "Release Date" preceding its "Placement Date".') %> For purposes of analysis of placement length, we exclude these records, leaving <%= len(srms2[~null_release]) %> completed solitary placements.

The maximum completed segregation placement length was <%= int(srms2.loc[~null_release, 'days_solitary'].max()) %> days. The average segregation placement length was <%= round(srms2.loc[~null_release, 'days_solitary'].mean(),2) %> days and the median segregation placement length was <%= int(srms2.loc[~null_release, 'days_solitary'].median()) %> days. The most common placement length was <%= int(srms2.loc[~null_release, 'days_solitary'].mode()) %> days.

The median and mode values are close to ICE's maximum length of 30 days for most disciplinary segregation placements.<%= fn('See Section 2.12 "Special Management Units" in ICE&rsquo;s detention standards manual: <https://www.ice.gov/doclib/detention-standards/2011/2-12.pdf>') %> <%= round(sum(srms2['days_solitary'] <= 30) / len(srms2[~null_release]) * 100, 2) %>% of placements were for 30 days or less, and <%= round(sum(srms2['days_solitary'] > 30) / len(srms2[~null_release]) * 100, 2) %>% of placements were for more than 30 days.

<%= sum(srms2['days_solitary'] <= 15) %>, or <%= round(sum(srms2['days_solitary'] <= 15) / len(srms2[~null_release]) * 100, 2) %>% of placements were for 15 days or less, and <%= sum(srms2['days_solitary'] > 15) %>, or <%= round(sum(srms2['days_solitary'] > 15) / len(srms2[~null_release]) * 100, 2) %>% of placements were for more than 15 days. Under the United Nations Standard Minimum Rules for the Treatment of Prisoners, segregation for more than 15 consecutive days is prohibited. Note that ICE regulations do not require reporting of all segregation placements, as described above.

The following histogram chart displays the distribution of length of stay for completed segregation placements (excluding outliers).

**<%= fig_label() %>: Distribution of length of completed segregation placements (`days_solitary`) at NWDC**

```python, solitary_length_hist, echo=False
max = 720
step = 30
num_bins = np.arange(0,max,step)
data = srms2.loc[~null_release, 'days_solitary']
# the histogram of the data
n, bins, patches = plt.hist(data, num_bins, facecolor='blue', alpha=0.5)
 
#plt.plot()
plt.xlabel('Days')
plt.xticks(np.arange(0, max, step=step*2), rotation=45)
plt.ylabel('Placement count')
plt.yticks(np.arange(0, 240, step=20))
plt.ylim(-5, 240)
#plt.title('Segregation placement length (NWDC)')

# Tweak spacing to prevent clipping of ylabel
plt.subplots_adjust(left=0.15) 

txt='Data Source: ICE SRMS log released via FOIA\nFigure: UW Center for Human Rights'
plt.figtext(1, -.1, txt, wrap=True, horizontalalignment='right', fontsize=8)

plt.show();

```

```python, nwdc_placement_reason_table, echo=False

placements = srms2.groupby(by=["placement_reason"])["days_solitary"].describe().sort_values(by='count', ascending=False)
placements['count'] = placements['count'].astype(int)
placements['min'] = placements['min'].astype(int)
placements['max'] = placements['max'].astype(int)
placements['mean'] = round(placements['mean'], 2)
placements['std'] = round(placements['std'], 2)
placements = placements.fillna('')

```

<br>

### Placement Reason

Each solitary placement is categorized with one of <%= len(set(srms2['placement_reason'])) %> placement reasons (including "Other"). As mentioned above, the maximum solitary length for most "Disciplinary" placements is 30 days.

We can also aggregate these placement reasons into broader categories for comparison, as in the following figure:

**<%= fig_label() %>: Distribution of variable** `days_solitary` **by** `placement_reason_type`

```python, placement_reason_chart, echo=False, fig=True, width='800px'

order = srms2.groupby(by=["placement_reason_type"])["days_solitary"].median().sort_values(ascending=False).index;

fig, ax = plt.subplots(figsize=(7, 6));
ax.set_xscale("log");
ax.xaxis.set_major_formatter(mtick.ScalarFormatter());

fig = sns.boxplot(data=srms2, x="days_solitary", y="placement_reason_type", order=order, palette="vlag");

fig = sns.swarmplot(data=srms2, x="days_solitary", y="placement_reason_type", order=order,
              size=2, color=".3", linewidth=0);

ax.xaxis.grid(True)
ax.set(ylabel="")
plt.xlim(.8, 1000)
sns.despine(trim=True, left=True)

txt = 'Data Source: ICE SRMS log released via FOIA\nFigure: UW Center for Human Rights';
plt.figtext(1.1, -.03, txt, wrap=True, horizontalalignment='right', fontsize=8);
plt.show();
```

As seen in the following table describing the lenth of solitary placement for each detailed placement type, the most frequently used reasons include broad categories such as "Disciplinary", "Protective Custody: Other Detainee Safety" and "Facility Security Threat: Other".

**<%= tab_label() %>: Description of variable** `days_solitary` **grouped by** `placement_reason`

<% print(placements.to_html(border=0, index=True)) %>

Application of different placement reason categories varies over time, as seen in the following figure, which shows trends in the proportion of placement reasons per fiscal year period. Note the proportional decrease in "Disciplinary" placements (which involve an administrative hearing process), and increase in "Protective Custody" and "Facility Security Threat" placements, which tend to be longer on average than disciplinary placements.

**<%= fig_label() %>: NWDC segregation placement reason categories as proportion of total placements**

```python, placement_reason_proportion, echo=False, fig=True, width='800px'

data = srms2.set_index('placement_date').groupby([pd.Grouper(freq='AS-OCT')])['placement_reason_type'].value_counts().unstack()
data.index = [f'FY{x.year+1}' for x in data.index]

totals = data.sum(axis=1).to_list()
for col in data.columns:
    data[col] = [i / j * 100 for i,j in zip(data[col], totals)]

data = data[['Disciplinary',
            'Pending Disciplinary',
            'Protective Custody',
            'Facility Security Threat',
            'Hunger Strike',
            'Medical',
            'Mental Illness',
            'Other'
            ]]

data = data.fillna(0)

fig, ax = plt.subplots(figsize=(10,6))

fig = data.plot(ax=ax, kind='bar', stacked=True)
plt.legend(bbox_to_anchor=(1.04,1), loc='upper left', title='placement_reason_type')

ax.yaxis.set_major_formatter(mtick.PercentFormatter())
ax.set_ylim(-5,105)
ax.yaxis.grid(color='#DDDDDD')

plt.ylabel('% of Placements', fontsize=12)
plt.xlabel('Fiscal Year', fontsize=12)
plt.xticks(rotation=0)

# plt.title('Placement reason as proportion of total placements', fontsize=18, pad=10)

txt='Data Source: ICE SRMS log released via FOIA\nFigure: UW Center for Human Rights'
plt.figtext(1.1, -.03, txt, wrap=True, horizontalalignment='right', fontsize=12)

plt.show();

```

We can also illustrate placement reason and stay lengths over time. Note the frequent disciplinary placements during late FY2012 and FY2013 with stay lengths around 15-40 days, and the cluster of long "Facility Security Threat" placements during FY2016:

**<%= fig_label() %>: NWDC segregation placements by reason and stay length over time**

```python, placement_reason_timeline, echo=False, fig=True, width='1200px'

fig = plt.figure(figsize=(10,6))
ax = fig.add_subplot(111)
ax.set_facecolor('#DDDDDD')
ax.set_axisbelow(True)
ax.yaxis.grid(color='#FFFFFF', which='both')
ax.xaxis.grid(color='#FFFFFF')

to_plot = 'placement_reason_type'

values = ['Disciplinary',
        'Pending Disciplinary',
        'Protective Custody',
        'Facility Security Threat',
        'Hunger Strike',
        'Medical',
        'Mental Illness',
        'Other']

for v in values:
    data = srms2[srms2[to_plot] == v]
    x=data.loc[:, 'placement_date'].astype(int)
    y=data.loc[:,'days_solitary']
    plt.scatter(x, y, s=20, alpha=.8)

plt.xticks(pd.date_range(start='2013-01-01', end='2020-06-01', freq='AS-OCT').astype(int))
xticks = ax.get_xticks()
xticks_dates = [str(f'FY{pd.to_datetime(x).year}') for x in xticks]
ax.set_xticklabels(xticks_dates)
plt.xlabel('Placement date', fontsize=12)

plt.yscale('log')
plt.ylabel('Stay length (days, log scale)', fontsize=12)
ax.yaxis.set_major_formatter(mtick.ScalarFormatter())

plt.legend(values, title=to_plot, loc='upper left', bbox_to_anchor=(1, 1))

plt.title('Stay length of reported NWDC segregation placements', fontsize=16)

txt='Data Source: ICE SRMS log released via FOIA\nFigure: UW Center for Human Rights'
plt.figtext(1.1, -.03, txt, wrap=True, horizontalalignment='right', fontsize=8)

plt.show()
plt.close(fig=fig)
del fig, ax

```

<br>

### Mental illness

```python, nwdc_mental_illness_table, echo=False

mental_illness = srms2.groupby(by=["mental_illness"])["days_solitary"].describe().sort_values(by='count', ascending=False)
mental_illness['count'] = mental_illness['count'].astype(int)
mental_illness['min'] = mental_illness['min'].astype(int)
mental_illness['max'] = mental_illness['max'].astype(int)
mental_illness['mean'] = round(mental_illness['mean'], 2)
mental_illness['std'] = round(mental_illness['std'], 2)
mental_illness = mental_illness.fillna('')

```

While "Mental Illness" is occasionally employed as a `placement_reason` value, all records also include a `mental_illness` field indicating whether the detained person has been diagnosed with a mental illness or serious mental illness. <%= sum(srms2['mental_illness'] == 'Mental Illness') %>, or <%= round(sum(srms2['mental_illness'] == 'Mental Illness') / len(srms2) * 100, 2) %>% of records indicate a "Mental Illness" diagnosis; <%= sum(srms2['mental_illness'] == 'Serious Mental Illness') %>, or <%= round(sum(srms2['mental_illness'] == 'Serious Mental Illness') / len(srms2) * 100, 2) %>% of records indicate a diagnosis of "Serious Mental Illness". Remaining records indicate no mental illness diagnosis.

**<%= fig_label() %>: Count of placements by** `mental_illness` **Category**

```python, mental_illness_flag_count, echo=False, fig=True, width='800px'

srms2['mental_illness'] = srms2['mental_illness'].fillna('None')

data = srms2.set_index('placement_date').groupby([pd.Grouper(freq='Q-OCT')])['mental_illness'].value_counts(dropna=False).unstack()
data.index = [f'{x.year} Q{x.quarter}' for x in data.index]

data = data[['Mental Illness', 'Serious Mental Illness', 'None']]

fig, ax = plt.subplots(figsize=(10,6))

data.plot(kind='bar', ax=ax, stacked=True, figsize=(10,8), color=cm.tab10(range(0,8,1)))

ax.set_facecolor('#DDDDDD')
ax.set_axisbelow(True)
ax.yaxis.grid(color='#FFFFFF')

ax.yaxis.set_minor_locator(MultipleLocator(1))
ax.yaxis.set_major_locator(MultipleLocator(2))
plt.xticks(rotation=45)

plt.title('Reported NWDC Segregation Placements by Mental Illness Category', fontsize=18, pad=10)
plt.ylabel('Placements', fontsize=12)
plt.xlabel('Fiscal Year Quarter', fontsize=12)
plt.legend(bbox_to_anchor=(1.04,1), loc='upper left', title='mental_illness')
txt='Data Source: ICE SRMS log released via FOIA\nFigure: UW Center for Human Rights'
plt.figtext(1.1, -.03, txt, wrap=True, horizontalalignment='right', fontsize=12)

plt.show();

```

As shown in the preceding section, <%= sum(srms2['placement_reason'] == "Mental Illness") %> records indicate a `placement_reason` of "Mental Illness". Of these records, <%= sum(srms2[srms2['placement_reason'] == 'Mental Illness']['mental_illness'] == 'None') %> indicate a `mental_illness` value of "None".

As illustrated in the following table and chart, stay lengths for individuals with a "Mental Illness" diagnosis tended to be shorter than those without. However, stay lengths for individuals with a "Serious Mental Illness" diagnosis tended to be longer:

**<%= tab_label() %>: Description of variable** `days_solitary` **grouped by** `mental_illness`

<% print(mental_illness.to_html(border=0, index=True)) %>


**<%= fig_label() %>: Distribution of variable** `days_solitary` **by** `mental_illness`

```python, mental_illness_days_chart, echo=False, fig=True, width='800px'

order = ['None', 'Mental Illness', 'Serious Mental Illness']

fig, ax = plt.subplots(figsize=(7, 6));
ax.set_xscale("log");
ax.xaxis.set_major_formatter(mtick.ScalarFormatter());

fig = sns.boxplot(data=srms2, x="days_solitary", y="mental_illness", order=order, palette="vlag");

fig = sns.swarmplot(data=srms2, x="days_solitary", y="mental_illness", order=order,
              size=2, color=".3", linewidth=0);

ax.xaxis.grid(True)
ax.set(ylabel="")
plt.xlim(.8, 1000)
sns.despine(trim=True, left=True)

```



<br>

### "Facility-Initiated" versus "Detainee Request" placements at NWDC

```python, nwdc_detainee_request_tables, echo=False

request_reason = srms2.groupby(['detainee_request', 'placement_reason_type'])["days_solitary"].describe()
request_reason['count'] = request_reason['count'].astype(int)
request_reason['min'] = request_reason['min'].astype(int)
request_reason['max'] = request_reason['max'].astype(int)
request_reason['mean'] = round(request_reason['mean'], 2)
request_reason['std'] = round(request_reason['std'], 2)
request_reason = request_reason.fillna('')

detainee_requested = srms2['detainee_request'] == 'Detainee Request'

```

Each placement is coded as either "Facility-Initiated" (<%= len(srms2[~detainee_requested]) %> placements) or "Detainee Request" (<%= len(srms2[detainee_requested]) %> placements). As seen in the below table, the majority of reported detainee requested placements were for "Protective Custody", with a small minority classified as "Other."

Average stay lengths for "Detainee Request" placements were considerably longer than for "Facility-Initiated" placements (<%= round(srms2.loc[detainee_requested, 'days_solitary'].mean(), 2) %> versus <%= round(srms2.loc[~detainee_requested, 'days_solitary'].mean(), 2) %>) days; however, we note that stay lengths vary greatly, as seen in the following figure.

**<%= fig_label() %>: Distribution of variable** `days_solitary` **grouped by**  `detainee_request`

```python, nwdc_detainee_request_chart, echo=False, fig=True, width='800px'

fig, ax = plt.subplots(figsize=(7, 6));
ax.set_xscale("log");
ax.xaxis.set_major_formatter(mtick.ScalarFormatter());

fig = sns.boxplot(data=srms2, x="days_solitary", y="detainee_request", palette="vlag");

fig = sns.swarmplot(data=srms2, x="days_solitary", y="detainee_request",
              size=2, color=".3", linewidth=0);

ax.xaxis.grid(True)
ax.set(ylabel="")
plt.xlim(.8, 1000)

sns.despine(trim=True, left=True)

```

```

**<%= tab_label() %>: Description of variable** `days_solitary` **grouped by** `detainee_request` **and** `placement_reason_type`

<% print(request_reason.to_html(border=0, index=True)) %>

The [next data appendix section](natl-srms.html) uses national ICE SRMS data obtained by ICIJ and POGO to compare the use of segregation at NWDC to other IE detention facilities.

[Back to Data Appendix Index](index.html)

---

## Notes

<%= print_fn_refs() %>